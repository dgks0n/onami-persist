                                    ------
                                    Home
                                    ------
                                    The Apache Onami developers team
                                    ------
                                     2014

~~
~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.
~~

Welcome to Onami-Persist!

  ${project.description}.

Before starting

  Onami-Persist is available on the Maven Central repo,
  you just need to add the dependency below in your <<<pom.xml>>> file:

+--------------------------------------+
<dependencies>
  ...
  <dependency>
    <groupId>${project.groupId}</groupId>
    <artifactId>${project.artifactId}</artifactId>
    <version>${project.version}</version>
  </dependency>
  ...
</dependencies>
+--------------------------------------+

Why Onami-Persist

  The official guice extension guice-persist allows to configure and inject a persistence unit into your classes.
  Guice-persist assumes that only one persistence unit is used in an application and that this persistence unit is
  application managed. Onami-Persist overcomes this shortcoming.

  It supports:

  * multiple persistence units

  * application manged and container managed persistence units

  * resource local and JTA transactions.

Overview

  {{{./daoExample.html}Here}} you find a sample code of how a DAO or service may look if it uses guice-jpa

  If you have used guice-persist before you may be interested in the
  {{{./guicePersist.html}differences between guice-jpa and guice-persist.}}

  The most difficult part to get right is the configuration and setup of the persistence unit. Some examples are provided:

  * {{{./standaloneApp.html}Standalone Application Setup}}

  * {{{./simpleWebApp.html}Simple Web Application Setup}}

  * {{{./complexWebApp.html}Multi Datasource Web Application Setup}}
